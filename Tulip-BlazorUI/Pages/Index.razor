@page "/"
@inject IProductRepository _prodRepo

<AuthorizeView>
    <Authorized>
        <p class="h4">Welcome, @context.User.Identity.Name</p>
    </Authorized>
    <NotAuthorized>
        <p class="h4">Hello, Guest!</p>
    </NotAuthorized>
</AuthorizeView>

@if (Model == null)
{
    <LoadingMessage />
}
else
{
    <div class="row">
        <div class="col-12">
            <input type="text"
                   placeholder="Search Product By Name" />
            <i class="fas fa-search fa-lg"></i>
            <a href="#" style="float:right">
                @*@onclick="ReviewOrderBtn"*@
                <i class="fas fa-shopping-cart fa-lg"></i>
                <span class='badge badge-warning' id='lblCartCount'>@*@Cart.Count*@</span>
            </a>
        </div>
    </div>
    <br />
    <br />
    <AuthorizeView Roles="Administrator">
        <Authorized>
            <a href="/products/create" class="btn btn-primary">
                <span class="oi oi-plus"></span> Add New Product
            </a>
            <br />
            <br />
        </Authorized>
    </AuthorizeView>
    @if (Model.Count < 1)
    {
        <InfoMessage Message="There are no records found in the database. Click 'Add New Product' to insert new record" />
    }
    else
    {
      
        <div class="row">
                @foreach (var product in Model)
                {
                    <ProductComponent Product="@product" />
                }
            </div>
    }
}


@code {

    private IList<Product> Model;


    protected override async Task OnInitializedAsync()
    {
        Model = await _prodRepo.Get(Endpoints.ProductsEndpoint);
        
    }
}