@page "/categories/edit/{Id:int}"
@attribute [Authorize(Roles = "Administrator")]
@inject ICategoryRepository _cateRepo
@inject NavigationManager _navManager

<h3 class="card-title text-center">Edit Category</h3>
<br/>
<hr />
<br />
@if (!isSuccess)
{
    <ErrorMessage Message="An error occurred while processing your request. Please try again!" />
}

@if (Model == null)
{
    <LoadingMessage />
}
else
{
    <EditForm Model="Model" OnValidSubmit="EditCategory">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="categoryname">Category Name</label>
            <InputText @bind-Value="Model.CategoryName" class="form-control" id="categoryname" />
        </div>
        <a href="categories/" class="btn btn-outline-secondary">
            <span class="oi oi-media-skip-backward"></span> Categories
        </a>
        <button class="btn btn-primary" type="submit">
            <span class="oi oi-pencil"></span> Submit Changes
        </button>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Category Model;
    private bool isSuccess = true;

    protected override async Task OnInitializedAsync()
    {
        Model = await _cateRepo.Get(Endpoints.CategoriesEndpoint, Id);
    }

    private async Task EditCategory()
    {
        isSuccess = await _cateRepo.Update(Endpoints.CategoriesEndpoint, Model, Model.Id);
        if (isSuccess)
        {
            _navManager.NavigateTo("/categories");
        }
    }
}
