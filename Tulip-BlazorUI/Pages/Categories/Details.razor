@page "/categories/details/{Id:int}"
@attribute [Authorize(Roles = "Administrator")]
@inject ICategoryRepository _cateRepo

<h3 class="card-title text-center">Category Details</h3>
<br />
<hr />
<br />
@if (Model == null)
{
    <LoadingMessage />
}
else
{
    <div class="col-md-12">
        <h4>Category Details</h4>
        <table class="table table-responsive">
            <tr>
                <td>Category Name</td>
                <td>@Model.CategoryName</td>
            </tr>
        </table>
        @if (Model.Products == null || Model.Products.Count < 1)
        {
            <InfoMessage Message="No Products under this category" />
        }
        else
        {
            <div class="card">
                <div class="card-header text-white" style="background-color: #00AA9E;">
                    <h4>Category's Products</h4>
                </div>
                <ul class="list-group list-group-flush">
                    @foreach (var product in Model.Products)
                    {
                        <li class="list-group-item">@product.ProductName</li>
                    }
                </ul>
            </div>
        }

    </div>
}
<br />
<a href="/categories" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span> Categories
</a>
<a href="/categories/edit/@Id" class="btn btn-outline-warning">
    <span class="oi oi-pencil"></span> Edit
</a>
<a href="/categories/delete/@Id" class="btn btn-outline-danger">
    <span class="oi oi-circle-x"></span> Delete
</a>
@code {
    [Parameter]
    public int Id { get; set; }

    private Category Model;

    protected override async Task OnInitializedAsync()
    {
        Model = await _cateRepo.Get(Endpoints.CategoriesEndpoint, Id);
    }

}
