@page "/products/delete/{Id:int}"
@attribute [Authorize(Roles = "Administrator")]
@inject IProductRepository _prodRepo
@inject IFileUplaod _fileUpload
@inject NavigationManager _navManager

<h3 class="card-title text-center">Delete Product</h3>
<br />
<hr />
<br />
@if (!isSuccess)
{
    <ErrorMessage Message="An error occurred while processing your request. Please try again!" />
}
@if (Model == null)
{
    <LoadingMessage />
}
else
{
    <div class="row">
        <div class="col-8">
            <table class="table table-responsive">
                <tr>
                    <td>
                        <strong>Product Name</strong>
                    </td>
                    <td>@Model.ProductName</td>
                </tr>
                <tr>
                    <td>
                        <strong>Description</strong>
                    </td>
                    <td>@Model.Description</td>
                </tr>
                <tr>
                    <td>
                        <strong>Price</strong>
                    </td>
                    <td>@(string.Format("{0:C}", Model.RetailPrice))</td>
                </tr>
            </table>
        </div>
        <div class="float-right" style="text-align:center;">
            <img class="img-fluid" src="images/@Model.ProductImage" style="height:300px; width:300px" />
            <h3 class="text-center text-info">@(string.Format("{0:C}", Model.RetailPrice))</h3>
        </div>
    </div>
}
<br />

<a href="/" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span> Home
</a>
<button class="btn btn-danger" @onclick="DeleteProduct">
    <span class="oi oi-delete"></span> Delete Product
</button>

@if (Model != null)
{
<ConfirmComponent @ref="DeleteConfirmation" ConfirmationChanged="ConfirmDelete"
                  Message="@($"Are you sure you want to delete \"{Model.ProductName}\"?")" />
}
@code {
    [Parameter]
    public int Id { get; set; }
    public ConfirmComponent DeleteConfirmation { get; set; }

    private Product Model;
    private bool isSuccess = true;

    protected override async Task OnInitializedAsync()
    {
        Model = await _prodRepo.Get(Endpoints.ProductsEndpoint, Id);
    }

    private void DeleteProduct()
    {
        DeleteConfirmation.Show();
    }

    private async Task ConfirmDelete(bool deleteConfirmed)
    {
        if (deleteConfirmed)
        {
            _fileUpload.RemoveFile(Model.ProductImage);
            isSuccess = await _prodRepo.Delete(Endpoints.ProductsEndpoint, Model.Id);
            if (isSuccess)
            {
                _navManager.NavigateTo("/");
            }
        }
    }
}
