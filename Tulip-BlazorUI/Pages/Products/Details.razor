@page "/products/details/{Id:int}"
@inject IProductRepository _prodRepo

<h3 class="card-title text-center">Product Details</h3>
<br />
<hr />
<br />
@if (Model == null)
{
    <LoadingMessage />
}
else
{
    <div class="row">
        <div class="col-8">
            <table class="table table-responsive">
                <tr>
                    <td>
                        <strong>Product Name</strong>
                    </td>
                    <td>@Model.ProductName</td>
                </tr>
                <tr>
                    <td>
                        <strong>Description</strong>
                    </td>
                    <td>@Model.Description</td>
                </tr>
                <tr>
                    <td>
                        <strong>Price</strong>
                    </td>
                    <td>@(string.Format("{0:C}", Model.RetailPrice))</td>
                </tr>
            </table>
        </div>
        <div class="float-right" style="text-align:center;">
            <img class="img-fluid"  src="images/@Model.ProductImage" style="height:300px; width:300px" />
            <h3 class="text-center text-info">@(string.Format("{0:C}", Model.RetailPrice))</h3>
        </div>
    </div>
}
<a href="/" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span> Home
</a>
<AuthorizeView Roles="Administrator">
    <Authorized>
        <a href="/products/edit/@Id" class="btn btn-outline-warning">
            <span class="oi oi-pencil"></span> Edit
        </a>
        <a href="/products/delete/@Id" class="btn btn-outline-danger">
            <span class="oi oi-circle-x"></span> Delete
        </a>
    </Authorized>
</AuthorizeView>


@code {
    [Parameter]
    public int Id { get; set; }

    private Product Model;

    protected override async Task OnInitializedAsync()
    {
        Model = await _prodRepo.Get(Endpoints.ProductsEndpoint, Id);
    }

}
