@page "/categories/details/{Id:int}"

@inject ICategoryRepository _cateRepo
@inject NavigationManager _navManager

<h3>Details</h3>
@if (Model == null)
{
    <div class="alert alert-dismissible alert-dark">
        Loading Data...
    </div>
}
else
{
    <div class="col-md-4">
        <h4>Category Details</h4>
        <table class="table table-responsive">
            <tr>
                <td>Category Name</td>
                <td>@Model.CategoryName</td>
            </tr>
        </table>
        @if (Model.Products == null || Model.Products.Count < 1)
        {
            <div class="alert alert-dismissible alert-dark">
                No Products under this category
            </div>
        }
        else
        {
            <div class="card" style="width:18rem;">
                <div class="card-header">
                    <h4>Category's Products</h4>
                </div>
                <ul class="list-group list-group-flush">
                    @foreach (var product in Model.Products)
                    {
                        <li class="list-group-item">@product.ProductName</li>
                    }
                </ul>
            </div>
        }

    </div>
}
<br/>
<button class="btn btn-outline-secondary" @onclick="BackToCategories">
   <span class="oi oi-media-skip-backward"></span> Back To Categories
</button>

@code {
    [Parameter]
    public int Id { get; set; }

    private Category Model = new Category();

    protected override async Task OnInitializedAsync()
    {
        Model = await _cateRepo.Get(Endpoints.CategoriesEndpoint, Id);
    }
    private void BackToCategories()
    {
        _navManager.NavigateTo("/categories");
    }

}
